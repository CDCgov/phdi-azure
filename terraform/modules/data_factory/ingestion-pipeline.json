{
    "name": "ingestion",
    "properties": {
        "activities": [
            {
                "name": "if_fhir_continue_otherwise_validate",
                "type": "IfCondition",
                "dependsOn": [],
                "userProperties": [],
                "typeProperties": {
                    "expression": {
                        "value": "@equals(pipeline().parameters.message_type, 'fhir')",
                        "type": "Expression"
                    },
                    "ifTrueActivities": [                        
                        {
                            "name": "set_message_valid_1",
                            "type": "SetVariable",
                            "dependsOn": [],
                            "policy": {
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "message_valid",
                                "value": {
                                    "value": true,
                                    "type": "Expression"
                                }
                            }
                        }
                    ],
                    "ifFalseActivities": [
                        {
                            "name": "validate_message",
                            "description": "Validate Hl7 or CDA message.\n",
                            "type": "WebActivity",
                            "dependsOn": [],
                            "policy": {
                                "timeout": "0.12:00:00",
                                "retry": 3,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "url": "${validation_container_url}/validate",
                                "method": "POST",
                                "body": {
                                    "value": "{\n    \"message\": @{pipeline().parameters.message},\n    \"message_type\": \"@{pipeline().parameters.message_type}\",\n    \"include_error_types\": \"@{pipeline().parameters.include_error_types}\"\n}",
                                    "type": "Expression"
                                },
                                "authentication": {
                                    "resource": "api://phdi-${environment}-validation",
                                    "credential": {
                                        "referenceName": "pipeline-runner-credential",
                                        "type": "CredentialReference"
                                    },
                                    "type": "UserAssignedManagedIdentity"
                                }
                            }
                        },
                        {
                            "name": "set_message_valid_2",
                            "type": "SetVariable",
                            "dependsOn": [
                                {
                                    "activity": "validate_message",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "policy": {
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "message_valid",
                                "value": {
                                    "value": "@string(activity('validate_message').output.message_valid)",
                                    "type": "Expression"
                                }
                            }
                        }

                    ]
                }
            },
            {
                "name": "if_valid_continue_otherwise_fail",
                "type": "IfCondition",
                "dependsOn": [
                    {
                        "activity": "if_fhir_continue_otherwise_validate",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "expression": {
                        "value": "@equals(variables('message_valid'), 'true')",
                        "type": "Expression"
                    },
                    "ifTrueActivities":[],
                    "ifFalseActivities": [
                        {
                            "name": "message_validation_failure",
                            "type": "Fail",
                            "dependsOn": [],
                            "userProperties": [],
                            "typeProperties": {
                                "message": "@{activity('validate_message').output}",
                                "errorCode": "422"
                            }
                        }
                    ]
                }
            },
            {
                "name": "log_validation_failure",
                "description": "Write validation failures to storage.\n",
                "type": "WebActivity",
                "dependsOn": [
                    {
                        "activity": "if_valid_continue_otherwise_fail",
                        "dependencyConditions": [
                            "Failed"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 3,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "url": "${ingestion_container_url}/cloud/storage/write_blob_to_storage",
                    "method": "POST",
                    "body": {
                        "value": "{\n    \"blob\": @{activity('validate_message').output},\n    \"cloud_provider\": \"azure\",\n    \"bucket_name\": \"${validation_failures_container_name}\",\n    \"file_name\": \"@{concat(substring(pipeline().parameters.filename, 12, 4), pipeline().RunId, '_', substring(pipeline().parameters.filename, 16, sub(length(pipeline().parameters.filename),length(substring(pipeline().parameters.filename, 0, add(length('source_data/'), 4))))))}\"\n}",
                        "type": "Expression"
                    },
                    "authentication": {
                        "resource": "api://phdi-${environment}-ingestion",
                        "credential": {
                            "referenceName": "pipeline-runner-credential",
                            "type": "CredentialReference"
                        },
                        "type": "UserAssignedManagedIdentity"
                    }
                }
            },
            {
                "name": "if_fhir_continue_otherwise_convert",
                "type": "IfCondition",
                "dependsOn": [
                    {
                        "activity": "if_valid_continue_otherwise_fail",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "expression": {
                        "value": "@equals(pipeline().parameters.message_type, 'fhir')",
                        "type": "Expression"
                    },
                    "ifTrueActivities": [
                        {
                            "name": "set_fhir_bundle_1",
                            "type": "SetVariable",
                            "dependsOn": [],
                            "policy": {
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "fhir_bundle",
                                "value": {
                                    "value": "@json(pipeline().parameters.message)",
                                    "type": "Expression"
                                }
                            }
                        }
                    ],
                    "ifFalseActivities": [
                        {
                            "name": "convert_to_fhir",
                            "description": "Convert message from Hl7 or CCD to FHIR.\n",
                            "type": "WebActivity",
                            "dependsOn": [],
                            "policy": {
                                "timeout": "0.12:00:00",
                                "retry": 3,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "url": "${fhir_converter_url}/convert-to-fhir",
                                "method": "POST",
                                "body": {
                                    "value": "{\n    \"input_data\": @{pipeline().parameters.message},\n    \"input_type\": \"@{pipeline().parameters.message_type}\",\n    \"root_template\": \"@{pipeline().parameters.root_template}\"\n}",
                                    "type": "Expression"
                                },
                                "authentication": {
                                    "resource": "api://phdi-${environment}-fhir-converter",
                                    "credential": {
                                        "referenceName": "pipeline-runner-credential",
                                        "type": "CredentialReference"
                                    },
                                    "type": "UserAssignedManagedIdentity"
                                }
                            }
                        },
                        {
                            "name": "log_fhir_conversion_failure",
                            "description": "Write FHIR conversion failures to storage.\n",
                            "type": "WebActivity",
                            "dependsOn": [
                                {
                                    "activity": "convert_to_fhir",
                                    "dependencyConditions": [
                                        "Failed"
                                    ]
                                }
                            ],
                            "policy": {
                                "timeout": "0.12:00:00",
                                "retry": 3,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "url": "${ingestion_container_url}/cloud/storage/write_blob_to_storage",
                                "method": "POST",
                                "body": {
                                    "value": "{\n    \"blob\": @{activity('convert_to_fhir').output.response},\n    \"cloud_provider\": \"azure\",\n    \"bucket_name\": \"${fhir_conversion_failures_container_name}\",\n    \"file_name\": \"@{concat(substring(pipeline().parameters.filename, 12, 4), pipeline().RunId, '_', substring(pipeline().parameters.filename, 16, sub(length(pipeline().parameters.filename),length(substring(pipeline().parameters.filename, 0, add(length('source_data/'), 4))))))}\"\n}",
                                    "type": "Expression"
                                },
                                "authentication": {
                                    "resource": "api://phdi-${environment}-ingestion",
                                    "credential": {
                                        "referenceName": "pipeline-runner-credential",
                                        "type": "CredentialReference"
                                    },
                                    "type": "UserAssignedManagedIdentity"
                                }
                            }
                        },
                        {
                            "name": "set_fhir_bundle_2",
                            "type": "SetVariable",
                            "dependsOn": [
                                {
                                    "activity": "convert_to_fhir",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "policy": {
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "fhir_bundle",
                                "value": {
                                    "value": "@{activity('convert_to_fhir').output.response.FhirResource}",
                                    "type": "Expression"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "name": "store_bundle_pre_harmonization",
                "description": "Save a copy of the converted FHIR bundle to the diffs/ container before it undergoes standardization",
                "type": "WebActivity",
                "dependsOn": [
                    {
                        "activity": "if_fhir_continue_otherwise_convert",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 3,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "url": "${ingestion_container_url}/cloud/storage/write_blob_to_storage",
                    "method": "POST",
                    "body": {
                        "value": "{\n    \"blob\": @{variables('fhir_bundle')},\n    \"cloud_provider\": \"azure\",\n    \"bucket_name\": \"bundle-snapshots\",\n    \"file_name\": \"@{concat('pre/', substring(pipeline().parameters.filename, 12, 4), pipeline().RunId, '_', substring(pipeline().parameters.filename, 16, sub(length(pipeline().parameters.filename),length(substring(pipeline().parameters.filename, 0, add(length('source_data/'), 4))))))}\"\n}",
                        "type": "Expression"
                    },
                    "authentication": {
                        "resource": "api://phdi-${environment}-ingestion",
                        "credential": {
                            "referenceName": "pipeline-runner-credential",
                            "type": "CredentialReference"
                        },
                        "type": "UserAssignedManagedIdentity"
                    }
                }
            },
            {
                "name": "standardize_name",
                "description": "Standardize patient name.",
                "type": "WebActivity",
                "dependsOn": [
                    {
                        "activity": "if_fhir_continue_otherwise_convert",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 3,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "url": "${ingestion_container_url}/fhir/harmonization/standardization/standardize_names",
                    "method": "POST",
                    "body": {
                        "value": "{\n    \"data\": @{variables('fhir_bundle')}\n}",
                        "type": "Expression"
                    },
                    "authentication": {
                        "resource": "api://phdi-${environment}-ingestion",
                        "credential": {
                            "referenceName": "pipeline-runner-credential",
                            "type": "CredentialReference"
                        },
                        "type": "UserAssignedManagedIdentity"
                    }
                }
            },
            {
                "name": "standardize_phone",
                "description": "Standardize patient phone number.",
                "type": "WebActivity",
                "dependsOn": [
                    {
                        "activity": "standardize_name",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 3,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "url": "${ingestion_container_url}/fhir/harmonization/standardization/standardize_phones",
                    "method": "POST",
                    "body": {
                        "value": "{\n    \"data\": @{activity('standardize_name').output.bundle}\n}",
                        "type": "Expression"
                    },
                    "authentication": {
                        "resource": "api://phdi-${environment}-ingestion",
                        "credential": {
                            "referenceName": "pipeline-runner-credential",
                            "type": "CredentialReference"
                        },
                        "type": "UserAssignedManagedIdentity"
                    }
                }
            },
            {
                "name": "standardize_dob",
                "description": "Standardize date of birth.",
                "type": "WebActivity",
                "dependsOn": [
                    {
                        "activity": "standardize_phone",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 3,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "url": "${ingestion_container_url}/fhir/harmonization/standardization/standardize_dob",
                    "method": "POST",
                    "body": {
                        "value": "{\n    \"data\": @{activity('standardize_phone').output.bundle}\n}",
                        "type": "Expression"
                    },
                    "authentication": {
                        "resource": "api://phdi-${environment}-ingestion",
                        "credential": {
                            "referenceName": "pipeline-runner-credential",
                            "type": "CredentialReference"
                        },
                        "type": "UserAssignedManagedIdentity"
                    }
                }
            },
            {
                "name": "geocode",
                "description": "Geocode and standardize patient address.",
                "type": "WebActivity",
                "dependsOn": [
                    {
                        "activity": "standardize_dob",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 3,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "url": "${ingestion_container_url}/fhir/geospatial/geocode/geocode_bundle",
                    "method": "POST",
                    "body": {
                        "value": "{\n    \"bundle\": @{activity('standardize_dob').output.bundle},\n    \"geocode_method\": \"smarty\"\n}",
                        "type": "Expression"
                    },
                    "authentication": {
                        "resource": "api://phdi-${environment}-ingestion",
                        "credential": {
                            "referenceName": "pipeline-runner-credential",
                            "type": "CredentialReference"
                        },
                        "type": "UserAssignedManagedIdentity"
                    }
                }
            },
            {
                "name": "store_bundle_post_harmonization",
                "type": "WebActivity",
                "dependsOn": [
                    {
                        "activity": "geocode",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 3,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "url": "${ingestion_container_url}/cloud/storage/write_blob_to_storage",
                    "method": "POST",
                    "body": {
                        "value": "{\n    \"blob\": @{activity('geocode').output.bundle},\n    \"cloud_provider\": \"azure\",\n    \"bucket_name\": \"bundle-snapshots\",\n    \"file_name\": \"@{concat('post/', substring(pipeline().parameters.filename, 12, 4), pipeline().RunId, '_', substring(pipeline().parameters.filename, 16, sub(length(pipeline().parameters.filename),length(substring(pipeline().parameters.filename, 0, add(length('source_data/'), 4))))))}\"\n}",
                        "type": "Expression"
                    },
                    "authentication": {
                        "resource": "api://phdi-${environment}-ingestion",
                        "credential": {
                            "referenceName": "pipeline-runner-credential",
                            "type": "CredentialReference"
                        },
                        "type": "UserAssignedManagedIdentity"
                    }
                }
            },
            {
                "name": "record_linkage_with_and_without_external_id",
                "type": "IfCondition",
                "dependsOn": [
                    {
                        "activity": "geocode",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "expression": {
                        "value": "@equals(pipeline().parameters.external_person_id, 'no external person id provided')",
                        "type": "Expression"
                    },
                    "ifTrueActivities": [
                        {
                            "name": "record_linkage_without_external_id",
                            "description": "Link new healthcare messages to existing records if a connection exists.",
                            "type": "WebActivity",
                            "dependsOn": [],
                            "policy": {
                                "timeout": "0.12:00:00",
                                "retry": 3,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "url": "${record_linkage_container_url}/link-record",
                                "method": "POST",
                                "body": {
                                    "value": "{\n    \"bundle\" :@{activity('geocode').output.bundle}\n}",
                                    "type": "Expression"
                                },
                                "authentication": {
                                    "resource": "api://phdi-${environment}-record-linkage",
                                    "credential": {
                                        "referenceName": "pipeline-runner-credential",
                                        "type": "CredentialReference"
                                    },
                                    "type": "UserAssignedManagedIdentity"
                                }
                            }
                        },
                        {
                            "name": "set_fhir_bundle_3",
                            "type": "SetVariable",
                            "dependsOn": [
                                {
                                    "activity": "record_linkage_without_external_id",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "policy": {
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "fhir_bundle",
                                "value": {
                                    "value": "@{activity('record_linkage_without_external_id').output.updated_bundle}",
                                    "type": "Expression"
                                }
                            }
                        }                        
                    ],
                    "ifFalseActivities": [
                        {
                            "name": "record_linkage_with_external_id",
                            "description": "Link new healthcare messages to existing records if a connection exists.",
                            "type": "WebActivity",
                            "dependsOn": [],
                            "policy": {
                                "timeout": "0.12:00:00",
                                "retry": 3,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "url": "${record_linkage_container_url}/link-record",
                                "method": "POST",
                                "body": {
                                    "value": "{\n    \"bundle\" :@{activity('geocode').output.bundle},\n    \"external_person_id\": \"@{pipeline().parameters.external_person_id}\"\n}",
                                    "type": "Expression"
                                },
                                "authentication": {
                                    "resource": "api://phdi-${environment}-record-linkage",
                                    "credential": {
                                        "referenceName": "pipeline-runner-credential",
                                        "type": "CredentialReference"
                                    },
                                    "type": "UserAssignedManagedIdentity"
                                }
                            }
                        },
                        {
                            "name": "set_fhir_bundle_4",
                            "type": "SetVariable",
                            "dependsOn": [
                                {
                                    "activity": "record_linkage_with_external_id",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "policy": {
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "fhir_bundle",
                                "value": {
                                    "value": "@{activity('record_linkage_with_external_id').output.updated_bundle}",
                                    "type": "Expression"
                                }
                            }
                        }    
                    ]
                }
            },
            {
                "name": "case_type_ecr_if_condition",
                "type": "IfCondition",
                "dependsOn": [
                    {
                        "activity": "record_linkage_with_and_without_external_id",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "expression": {
                        "value": "@equals(pipeline().parameters.message_type, 'ecr')",
                        "type": "Expression"
                    },
                    "ifTrueActivities": [
                        {
                            "name": "message_parser",
                            "description": "Extract desired fields from a given healthcare message.",
                            "type": "WebActivity",
                            "policy": {
                                "timeout": "0.12:00:00",
                                "retry": 3,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "url": "${message_parser_url}/parse_message",
                                "method": "POST",
                                "body": {
                                    "value": "{\n    \"message_format\": \"fhir\",\n    \"parsing_schema_name\": \"ecr.json\",\n    \"message\": @{variables('fhir_bundle')}\n}",
                                    "type": "Expression"
                                },
                                "authentication": {
                                    "resource": "api://phdi-${environment}-message-parser",
                                    "credential": {
                                        "referenceName": "pipeline-runner-credential",
                                        "type": "CredentialReference"
                                    },
                                    "type": "UserAssignedManagedIdentity"
                                }
                            }
                        },
                        {
                            "name": "post_to_storage_container",
                            "description": "Write message parser JSON to storage.",
                            "type": "WebActivity",
                            "dependsOn": [
                                {
                                    "activity": "message_parser",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "policy": {
                                "timeout": "0.12:00:00",
                                "retry": 3,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "url": "${ingestion_container_url}/cloud/storage/write_blob_to_storage",
                                "method": "POST",
                                "body": {
                                    "value": "{\n    \"blob\": @{activity('message_parser').output.parsed_values},\n    \"cloud_provider\": \"azure\",\n    \"bucket_name\": \"${delta_tables_container_name}\",\n    \"file_name\": \"raw_data/@{concat(pipeline().RunId, '.json')}\"\n}",
                                    "type": "Expression"
                                },
                                "authentication": {
                                    "resource": "api://phdi-${environment}-ingestion",
                                    "credential": {
                                        "referenceName": "pipeline-runner-credential",
                                        "type": "CredentialReference"
                                    },
                                    "type": "UserAssignedManagedIdentity"
                                }
                            }
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "message": {
                "type": "String"
            },
            "message_type": {
                "type": "String"
            },
            "root_template": {
                "type": "String"
            },
            "filename": {
                "type": "String"
            },
            "include_error_types": {
                "type": "String"
            },
            "external_person_id": {
                "defaultValue": "no external person id provided",
                "type": "String"
            }
        },
        "variables": {
            "fhir_bundle": {
                "type": "String"
            },
            "message_valid": {
                "type": "Boolean"
            }
        },
        "annotations": [
            "FileName"
        ],
        "lastPublishTime": "2022-11-01T21:23:29Z"
    },
    "type": "Microsoft.DataFactory/factories/pipelines"
}